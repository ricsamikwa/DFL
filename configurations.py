# configuration file for ARES parameters with VGG

import sys
import numpy as np

SERVER_ADDR= '192.168.1.38'
SERVER_PORT = 43000

# Dataset 
dataset_name = 'CIFAR10'
home = sys.path[0].split('DFL')[0] + 'DFL'
dataset_path = home +'/datasets/'+ dataset_name +'/'
N = 50000 
N_phi = 10000 
N_sub = 20000

# configuration settings - cipher10 model
model_cfg = {
	'VGG' : [('C', 3, 32, 3, 32*32*32, 32*32*32*3*3*3), ('M', 32, 32, 2, 32*16*16, 0), 
	('C', 32, 64, 3, 64*16*16, 64*16*16*3*3*32), ('M', 64, 64, 2, 64*8*8, 0), 
	('C', 64, 64, 3, 64*8*8, 64*8*8*3*3*64), 
	('D', 8*8*64, 128, 1, 64, 128*8*8*64), 
	('D', 128, 10, 1, 10, 128*10)]
}

# configuration settings - mnist model
other_model_cfg = {
    'VGG': [
        ('C', 1, 32, 3, 32*28*28, 32*28*28*1*3*3),
        ('M', 32, 32, 2, 32*14*14, 0),
        ('C', 32, 64, 3, 64*14*14, 64*14*14*3*3*32),
        ('M', 64, 64, 2, 64*7*7, 0),
        ('C', 64, 64, 3, 64*7*7, 64*7*7*3*3*64),
        ('D', 64*7*7, 128, 1, 3136, 128*64*7*7),  # Update input size to 3136
        ('D', 128, 10, 1, 10, 128*10)
    ]
}

	# 'VGG' : [('C', 3, 32, 3, 32*32*32, 32*32*32*3*3*3), ('M', 32, 32, 2, 32*16*16, 0), 
	# ('C', 32, 64, 3, 64*16*16, 64*16*16*3*3*32), ('M', 64, 64, 2, 64*8*8, 0), 
	# ('C', 64, 64, 3, 64*8*8, 64*8*8*3*3*64), 
	# ('D', 8*8*64, 128, 1, 64, 128*8*8*64), 
	# ('C', 64, 64, 3, 64*8*8, 64*8*8*3*3*64), 
	# ('D', 8*8*64, 128, 1, 64, 128*8*8*64), 
	# ('D', 8*8*64, 128, 1, 64, 128*8*8*64), 
	# ('D', 128, 10, 1, 10, 128*10)]

model_name = 'VGG'
model_size = 1.28
split_layer = [6, 6, 6] #init

R = 100 
LR = 0.01 # learning rate
B = 100 # minibatch

# Network info
# K = 5
# HOST2IP = {'pi':'192.168.1.33' , 'nano2':'192.168.1.41', 'nano4':'192.168.1.40' , 'nano6':'192.168.1.42', 'nano8':'192.168.1.43'}
# CLIENTS_CONFIG= {'192.168.1.33':0, '192.168.1.41':1, '192.168.1.40':2, '192.168.1.42':3, '192.168.1.43':4}
# CLIENTS_LIST= ['192.168.1.33', '192.168.1.41', '192.168.1.40', '192.168.1.42', '192.168.1.43'] 

iteration = {'192.168.1.49':5, '192.168.1.51':5, '192.168.1.42':5, '192.168.1.43':5}  
model_len = 7
# model_len = 14
random = True
random_seed = 0


K = 3 

HOST2IP = {'nano6':'192.168.1.42', 'nano8':'192.168.1.43', 'nano12':'192.168.1.51'}
CLIENTS_CONFIG= { '192.168.1.42':0, '192.168.1.43':1, '192.168.1.51':2}
CLIENTS_LIST= [ '192.168.1.42', '192.168.1.43', '192.168.1.51'] 


# Other params

similarity_matrix = np.array([
			[1.0, 0.8, 0.3, 0.2, 0.6],
			[0.8, 1.0, 0.4, 0.1, 0.7],
			[0.3, 0.4, 1.0, 0.9, 0.2],
			[0.2, 0.1, 0.9, 1.0, 0.4],
			[0.6, 0.7, 0.2, 0.4, 1.0]
		])

selected_classes1 = [0, 5, 7, 2, 4] 
samples_per_class = 8000  

selected_classes2 = [1, 6, 8, 9, 3]